import numpy as np


GML = 3.68508e13   # [km^3/day^2]
GME = 3.986004407799724e5  * (24*60*60)**2   # [km^3/day^2]
RL = 1738   # [km]
deg = np.pi/180
day = 86400

# Frequencies
lambda_moon = 0.229968

wE1 = 2.286e-6 * day
wE2 = 2.6392e-6 * day
wE3 = 4.9252e-6 * day
wE4 = 5.34481e-6 * day
wE5 = 1.99097e-7 * day
wE6 = 2.6724e-6 * day
wE7 = 3.32011e-8 * day
wE8 = 2.2528e-6 * day

# Earth Position Vector
AxV = [730.56, 14796.88, 1369.26, -1285.72]
BxV = [3836.11, 14794.17, -2010.23, 148.03]
wxV = [wE1, wE2, wE3, wE4]

AyV = [60.59, 8406.78, 29773.72, -3262.64, 148.26]
ByV = [-1403.61, -1596.08, -29749.79, -2223.9, 1287.76]
wyV = [wE5, wE1, wE2, wE3, wE4]

AzV = [-2579.36, -825.59, -44649.42]
BzV = [2895.76, 1073.41, 2554.55]
wzV = [wE7, wE8, wE6]

def earth_position(t):
    xE = 382469.63 + np.sum([AxV[j] * np.cos(wxV[j] * t) + BxV[j] * np.sin(wxV[j] * t) for j in range(len(AxV))], axis=0)
    yE = np.sum([AyV[j] * np.cos(wyV[j] * t) + ByV[j] * np.sin(wyV[j] * t) for j in range(len(AyV))], axis=0)
    zE = np.sum([AzV[j] * np.cos(wzV[j] * t) + BzV[j] * np.sin(wzV[j] * t) for j in range(len(AzV))], axis=0)

    return [xE, yE, zE]

# Moon Potential
def Cbar(n, m):
    Cnorm = [
        [1.000000000000000e+00],
        [0.000000000000000e+00, 0.000000000000000e+00],
        [-2.032235608709996e-04, 1.893130209898992e-11, 2.238138753207499e-05],
        [-8.459342178393005e-06, 2.848070227772371e-05, 4.840498597374690e-06, 1.711696026496275e-06],
        [9.704342532771031e-06, -5.704891059724035e-06, -1.591222220699527e-06, -8.067015260584596e-08, -1.269202397621497e-07],
        [-7.422119186963889e-07, -8.662790544246339e-07, 7.119956623495066e-07, 1.539855116434028e-08, 2.144538445195675e-08, 7.658915066467698e-09],
        [1.376753878447086e-05, 1.202427583466819e-06, -5.470394559978038e-07, -6.878487762951720e-08, 1.291739730293795e-09, 1.173810026661802e-09, -1.091329837656085e-09],
        [2.166319796653413e-05, 5.468701842361382e-06, -6.475633022427576e-08, 8.443361014715036e-09, -1.791567396339970e-09, -7.321288979786740e-11, -7.393757033464688e-11, -3.377026319461132e-11],
        [9.676222613705983e-06, 2.864427687379838e-09, 2.471675395396699e-07, -1.909824052179935e-08, 4.449021688247140e-09, -2.258977952255699e-10, -4.637326913590969e-11, -7.697990891130134e-12, -3.168660207380905e-12],
        [-1.539087570952814e-05, 1.213136368032195e-06, 1.335345306299043e-07, -1.505813918061675e-08, -1.612582861731546e-09, -1.598162047020475e-10, -2.808831278150007e-11, -7.461209379911922e-12, -4.288300029670737e-13, -7.227974675592330e-14],
        [-4.900128522538400e-06, 5.200368524089867e-07, 2.124130306138661e-08, 2.823082467960657e-09, -2.104341174083120e-09, 4.343884663306817e-11, -8.835312217479120e-13, -3.365726424686581e-12, -4.077090072103921e-13, -8.832000417377992e-14, 3.938571570999639e-15]
        ]
    return Cnorm[n][m]

def Sbar(n, m):
    Snorm = [
        [0.000000000000000e+00],
        [0.000000000000000e+00, 0.000000000000000e+00],
        [0.000000000000000e+00, 1.514693349556796e-09, 5.860591837596592e-10],
        [0.000000000000000e+00, 5.891582649049693e-06, 1.666166688711108e-06, -2.474034630980303e-07],
        [0.000000000000000e+00, 1.578912416261636e-06, -1.515393812246939e-06, -8.034910327363185e-07, 8.296061711591222e-08],
        [0.000000000000000e+00, -3.527221959889954e-06, 1.710818057599890e-07, 2.873621173013034e-07, 5.269558487459718e-10, -6.782012634073601e-09],
        [0.000000000000000e+00, -2.045350713853989e-06, -2.696680976311169e-07, -7.106384076189961e-08, -1.536166108162214e-08, -8.346492736638254e-09, 1.684409775289712e-09],
        [0.000000000000000e+00, -8.763535607864906e-08, 2.401520265108353e-07, 3.320508814242196e-08, 1.606508744024137e-09, 3.784535166006759e-10, 7.638524022411631e-11, -2.968566564448450e-11],
        [0.000000000000000e+00, 7.545544377800228e-07, 1.585662041241676e-07, 9.649774127504301e-09, -6.894716401382285e-10, 5.282551676102801e-10, -5.906028317473575e-11, 1.666807283497421e-11, 2.697842117599177e-12],
        [0.000000000000000e+00, 5.266046294265782e-08, -9.611292604260284e-08, 1.664019521873668e-08, -1.220110723504375e-09, -3.605064973570794e-10, -3.964760117432081e-11, -2.037085166580357e-13, -7.202140383764947e-13, 1.916884958693274e-13],
        [0.000000000000000e+00, -5.895343226275984e-07, -1.576327666096525e-08, 3.899600416514565e-09, 9.299191116272330e-10, -1.952970413972417e-11, -1.454340517072550e-11, -7.665920455964187e-13, 3.263164020914575e-13, -9.578199686501567e-16, -7.143936931826066e-15]
    ]
    return Snorm[n][m]

